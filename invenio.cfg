from invenio_i18n import lazy_gettext as _
from oarepo import config

# glitchtip for reporting incidents
config.initialize_glitchtip()

# i18n
config.initialize_i18n()

config.configure_generic_parameters(
    code="datarepo",
    name=_("Data Harbour"),
    description=_("Catch-all repository for scientific datasets"),
    languages=(("cs", _("Czech")),),
)

config.configure_communities(
    # if you have different community roles than owner, curator and member,
    # you can specify them here
)

config.register_workflow(
    "default",
    _("Default deposition workflow"),
    "common.workflows.default.DefaultWorkflowPermissions",
    "common.workflows.default.DefaultWorkflowRequests",
)

config.configure_cron()

# to enable datacite, uncomment the following lines
# from common.config.datacite import (
#               enable_datacite,
#               datacite_default_credentials,
#               datacite_community_prefix
# )
# enable_datacite(env)
# datacite_default_credentials(
#               env.INVENIO_DATACITE_PREFIX,
#               env.INVENIO_DATACITE_USERNAME,
#               env.INVENIO_DATACITE_PASSWORD)
# )
# datacite_community_prefix(
#              "biocev",
#               env.INVENIO_DATACITE_BIOCEV_PREFIX,
#               env.INVENIO_DATACITE_BIOCEV_USERNAME,
#               env.INVENIO_DATACITE_BIOCEV_PASSWORD)

# vocabularies:
config.configure_vocabulary(
    code="languages",
    name=_("Languages"),
    description=_("Language definitions vocabulary."),
    props={},
    dump_options=False,  # too big to dump options for LocalVocabularyField
)

# Feel free to add/override configuration options here. List of options can be
# found in the Invenio source code:
# https://github.com/inveniosoftware/invenio-app-rdm/blob/master/invenio_app_rdm/config.py

# datacite
DATACITE_MAPPING = {
    # this is a mapping from community slug to datacite prefix, user and secret
}


env = config.load_configuration_variables()
# note: move this to oarepo.config.configure_einfra_aai
if env.get("INVENIO_REMOTE_AUTH_ENABLED", False):
    from oarepo_oidc_einfra import EINFRA_LOGIN_APP

    OAUTHCLIENT_REMOTE_APPS = {"e-infra": EINFRA_LOGIN_APP}
else:
    OAUTHCLIENT_REMOTE_APPS = {}

EINFRA_LAST_DUMP_PATH = "nrp_invenio_export.json"


# at the end, override the configuration with values that come from
# k8s' mapped files that were not processed in the steps above.
config.override_configuration()
